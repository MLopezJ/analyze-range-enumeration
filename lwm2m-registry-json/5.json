{"LWM2M":{"ATTR":{"xmlns:xsi":"http://www.w3.org/2001/XMLSchema-instance","xsi:noNamespaceSchemaLocation":"http://www.openmobilealliance.org/tech/profiles/LWM2M-v1_1.xsd"},"Object":[{"ATTR":{"ObjectType":"MODefinition"},"Name":["Firmware Update"],"Description1":["This LwM2M Object enables management of firmware which is to be updated. This Object includes installing a firmware package, updating firmware, and performing actions after updating firmware. The firmware update MAY require to reboot the device; it will depend on a number of factors, such as the operating system architecture and the extent of the updated software.\r\nThe envisioned functionality is to allow a LwM2M Client to connect to any LwM2M Server to obtain a firmware image using the object and resource structure defined in this section experiencing communication security protection using TLS/DTLS. There are, however, other design decisions that need to be taken into account to allow a manufacturer of a device to securely install firmware on a device. Examples for such design decisions are how to manage the firmware update repository at the server side (which may include user interface considerations), the techniques to provide additional application layer security protection of the firmware image, how many versions of firmware images to store on the device, and how to execute the firmware update process considering the hardware specific details of a given IoT hardware product. These aspects are considered to be outside the scope of this version of the specification.\r\nA LwM2M Server may also instruct a LwM2M Client to fetch a firmware image from a dedicated server (instead of pushing firmware images to the LwM2M Client). The Package URI resource is contained in the Firmware object and can be used for this purpose.\r\nA LwM2M Client MUST support block-wise transfer [CoAP_Blockwise] if it implements the Firmware Update object.\r\nA LwM2M Server MUST support block-wise transfer. Other protocols, such as HTTP/HTTPs, MAY also be used for downloading firmware updates (via the Package URI resource). For constrained devices it is, however, RECOMMENDED to use CoAP for firmware downloads to avoid the need for additional protocol implementations."],"ObjectID":["5"],"ObjectURN":["urn:oma:lwm2m:oma:5:1.1"],"LWM2MVersion":["1.1"],"ObjectVersion":["1.1"],"MultipleInstances":["Single"],"Mandatory":["Optional"],"Resources":[{"Item":[{"ATTR":{"ID":"0"},"Name":["Package"],"Operations":["W"],"MultipleInstances":["Single"],"Mandatory":["Mandatory"],"Type":["Opaque"],"RangeEnumeration":[""],"Units":[""],"Description":["Firmware package"]},{"ATTR":{"ID":"1"},"Name":["Package URI"],"Operations":["RW"],"MultipleInstances":["Single"],"Mandatory":["Mandatory"],"Type":["String"],"RangeEnumeration":["0..255"],"Units":[""],"Description":["URI from where the device can download the firmware package by an alternative mechanism. As soon the device has received the Package URI it performs the download at the next practical opportunity. \r\nThe URI format is defined in RFC 3986. For example, coaps://example.org/firmware is a syntactically valid URI. The URI scheme determines the protocol to be used. For CoAP this endpoint MAY be a LwM2M Server but does not necessarily need to be. A CoAP server implementing block-wise transfer is sufficient as a server hosting a firmware repository and the expectation is that this server merely serves as a separate file server making firmware images available to LwM2M Clients."]},{"ATTR":{"ID":"2"},"Name":["Update"],"Operations":["E"],"MultipleInstances":["Single"],"Mandatory":["Mandatory"],"Type":[""],"RangeEnumeration":[""],"Units":[""],"Description":["Updates firmware by using the firmware package stored in Package, or, by using the firmware downloaded from the Package URI.\r\nThis Resource is only executable when the value of the State Resource is Downloaded."]},{"ATTR":{"ID":"3"},"Name":["State"],"Operations":["R"],"MultipleInstances":["Single"],"Mandatory":["Mandatory"],"Type":["Integer"],"RangeEnumeration":["0..3"],"Units":[""],"Description":["Indicates current state with respect to this firmware update. This value is set by the LwM2M Client.\r\n0: Idle (before downloading or after successful updating)\r\n1: Downloading (The data sequence is on the way)\r\n2: Downloaded\r\n3: Updating\r\nIf writing the firmware package to Package Resource has completed, or, if the device has downloaded the firmware package from the Package URI the state changes to Downloaded.\r\nWriting an empty string to Package URI Resource or setting the Package Resource to NULL (‘\\0’), resets the Firmware Update State Machine: the State Resource value is set to Idle and the Update Result Resource value is set to 0.\r\nThe device should remove the downloaded firmware image when the state is reset to Idle.\r\nWhen in Downloaded state, and the executable Resource Update is triggered, the state changes to Updating if the update starts immediately. For devices that support a user interface and the deferred update functionality, the user may be allowed to defer the firmware update to a later time. In this case, the state stays in Downloaded state and the Update Result is set to 11. Once a user accepted the firmware update, the state changes to Updating.\r\nWhen the user deferred the update, the device will continue operations normally until the user approves the firmware update or an automatic update starts. It will not block any operation on the device.\r\nIf the Update Resource failed, the state may return to either Downloaded or Idle depending on the underlying reason of update failure, e.g. Integrity Check Failure results in the client moving to the Idle state.\r\nIf performing the Update or Cancel operation was successful, the state changes to Idle. \r\nThe firmware update state machine is illustrated in the respective LwM2M specification."]},{"ATTR":{"ID":"5"},"Name":["Update Result"],"Operations":["R"],"MultipleInstances":["Single"],"Mandatory":["Mandatory"],"Type":["Integer"],"RangeEnumeration":["0..11"],"Units":[""],"Description":["Contains the result of downloading or updating the firmware\r\n0: Initial value. Once the updating process is initiated (Download /Update), this Resource MUST be reset to Initial value.\r\n1: Firmware updated successfully.\r\n2: Not enough flash memory for the new firmware package.\r\n3: Out of RAM during downloading process.\r\n4: Connection lost during downloading process.\r\n5: Integrity check failure for new downloaded package.\r\n6: Unsupported package type.\r\n7: Invalid URI.\r\n8: Firmware update failed.\r\n9: Unsupported protocol. A LwM2M client indicates the failure to retrieve the firmware image using the URI provided in the Package URI resource by writing the value 9 to the /5/0/5 (Update Result resource) when the URI contained a URI scheme unsupported by the client. Consequently, the LwM2M Client is unable to retrieve the firmware image using the URI provided by the LwM2M Server in the Package URI when it refers to an unsupported protocol.\r\n10: Firmware update cancelled. A Cancel operation has been executed successfully.\r\n11: Firmware update deferred."]},{"ATTR":{"ID":"6"},"Name":["PkgName"],"Operations":["R"],"MultipleInstances":["Single"],"Mandatory":["Optional"],"Type":["String"],"RangeEnumeration":["0..255"],"Units":[""],"Description":["Name of the Firmware Package"]},{"ATTR":{"ID":"7"},"Name":["PkgVersion"],"Operations":["R"],"MultipleInstances":["Single"],"Mandatory":["Optional"],"Type":["String"],"RangeEnumeration":["0..255"],"Units":[""],"Description":["Version of the Firmware package"]},{"ATTR":{"ID":"8"},"Name":["Firmware Update Protocol Support"],"Operations":["R"],"MultipleInstances":["Multiple"],"Mandatory":["Optional"],"Type":["Integer"],"RangeEnumeration":["0..5"],"Units":[""],"Description":["This resource indicates what protocols the LwM2M Client implements to retrieve firmware images. The LwM2M server uses this information to decide what URI to include in the Package URI. A LwM2M Server MUST NOT include a URI in the Package URI object that uses a protocol that is unsupported by the LwM2M client.\r\nFor example, if a LwM2M client indicates that it supports CoAP and CoAPS then a LwM2M Server must not provide an HTTP URI in the Packet URI.\r\nThe following values are defined by this version of the specification:\r\n0: CoAP (as defined in RFC 7252) with the additional support for block-wise transfer. CoAP is the default setting.\r\n1: CoAPS (as defined in RFC 7252) with the additional support for block-wise transfer\r\n2: HTTP 1.1 (as defined in RFC 7230)\r\n3: HTTPS 1.1 (as defined in RFC 7230)\r\n4: CoAP over TCP (as defined in RFC 8323)\r\n5: CoAP over TLS (as defined in RFC 8323)\r\nAdditional values MAY be defined in the future. Any value not understood by the LwM2M Server MUST be ignored."]},{"ATTR":{"ID":"9"},"Name":["Firmware Update Delivery Method"],"Operations":["R"],"MultipleInstances":["Single"],"Mandatory":["Mandatory"],"Type":["Integer"],"RangeEnumeration":["0..2"],"Units":[""],"Description":["The LwM2M Client uses this resource to indicate its support for transferring firmware images to the client either via the Package Resource (=push) or via the Package URI Resource (=pull) mechanism.\r\n0: Pull only\r\n1: Push only\r\n2: Both. In this case the LwM2M Server MAY choose the preferred mechanism for conveying the firmware image to the LwM2M Client."]},{"ATTR":{"ID":"10"},"Name":["Cancel"],"Operations":["E"],"MultipleInstances":["Single"],"Mandatory":["Optional"],"Type":[""],"RangeEnumeration":[""],"Units":[""],"Description":["Cancels firmware update.\r\nCancel can be executed if the device has not initiated the Update process. If the device is in the process of installing the firmware or has already completed installation it MUST respond with Method Not Allowed error code.\r\nUpon successful Cancel operation, Update Result Resource is set to 10 and State is set to 0 by the device."]},{"ATTR":{"ID":"11"},"Name":["Severity"],"Operations":["RW"],"MultipleInstances":["Single"],"Mandatory":["Optional"],"Type":["Integer"],"RangeEnumeration":["0..2"],"Units":[""],"Description":["Severity of the firmware image.\r\n0: Critical\r\n1: Mandatory\r\n2: Optional\r\nThis information is useful when the device provides option for the deferred update. Default value is 1."]},{"ATTR":{"ID":"12"},"Name":["Last State Change Time"],"Operations":["R"],"MultipleInstances":["Single"],"Mandatory":["Optional"],"Type":["Time"],"RangeEnumeration":[""],"Units":[""],"Description":["This resource stores the time when the State resource is changed. Device updates this resource before making any change to the State."]},{"ATTR":{"ID":"13"},"Name":["Maximum Defer Period"],"Operations":["RW"],"MultipleInstances":["Single"],"Mandatory":["Optional"],"Type":["Unsigned Integer"],"RangeEnumeration":[""],"Units":["s"],"Description":["The number of seconds a user can defer the software update.\r\nWhen this time period is over, the device will not prompt the user for update and install it automatically.\r\nIf the value is 0, a deferred update is not allowed."]}]}],"Description2":[""]}]}}